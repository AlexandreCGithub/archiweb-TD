name: CI CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci:
    name: CI - Tests # CI : runs on any push on main or on a branch with a PR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Bun check
        run: bun check

      - name: Applying linter
        run: bun lint

      - name: Run tests
        run: bun run test

      - name: Show coverage
        run: bun coverage
        continue-on-error: true

  cd:
    name: CD - Build & Push Docker Image # CD : runs on pushes on main, if CI succeeds
    runs-on: ubuntu-latest
    needs: ci
    if: success() && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Get commit number
        run: echo "VITE_COMMIT_NUMBER=$(git rev-list --count HEAD)" >> $GITHUB_ENV

      - name: Build project
        run: VITE_COMMIT_NUMBER=${{ env.VITE_COMMIT_NUMBER }} bun run build

      - name: Log into Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_PSEUDO }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: docker build --build-arg VITE_COMMIT_NUMBER=${{ env.VITE_COMMIT_NUMBER }} -t ${{ vars.IMAGE_NAME }}:latest .

      - name: Push Docker image to Docker Hub
        run: docker push ${{ vars.IMAGE_NAME }}:latest
